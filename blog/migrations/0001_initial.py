# Generated by Django 5.2.4 on 2025-07-25 11:12

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('excerpt', models.TextField(help_text='Short description for previews')),
                ('content', models.TextField(help_text='Full blog post content')),
                ('image_url', models.URLField(blank=True, help_text='Featured image URL')),
                ('date_published', models.DateField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('view_count', models.IntegerField(default=0)),
                ('featured', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'db_table': 'blog_post',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('color', models.CharField(blank=True, help_text='Hex color code for UI display (e.g., #FF5733)', max_length=7)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'tag',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='tag_slug_0f9213_idx')],
            },
        ),
        migrations.CreateModel(
            name='BlogPostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blogpost', models.ForeignKey(db_column='blogpost_id', on_delete=django.db.models.deletion.CASCADE, to='blog.blogpost')),
                ('tag', models.ForeignKey(db_column='tag_id', on_delete=django.db.models.deletion.CASCADE, to='blog.tag')),
            ],
            options={
                'verbose_name': 'Blog Post Tag',
                'verbose_name_plural': 'Blog Post Tags',
                'db_table': 'blogpost_tag',
                'unique_together': {('blogpost', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='blog_posts', through='blog.BlogPostTag', to='blog.tag'),
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True, help_text="Commenter's website")),
                ('message', models.TextField()),
                ('approved', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('parent', models.ForeignKey(blank=True, db_column='parent_id', help_text='Parent comment for nested replies', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.blogcomment')),
                ('blogpost', models.ForeignKey(db_column='blogpost_id', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blogpost')),
            ],
            options={
                'verbose_name': 'Blog Comment',
                'verbose_name_plural': 'Blog Comments',
                'db_table': 'blog_comment',
                'ordering': ['-date_created'],
                'indexes': [models.Index(fields=['blogpost'], name='blog_commen_blogpos_8c0b71_idx'), models.Index(fields=['approved'], name='blog_commen_approve_b97e33_idx'), models.Index(fields=['parent'], name='blog_commen_parent__43ce68_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['slug'], name='blog_post_slug_cdb902_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['status'], name='blog_post_status_02ce19_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['featured'], name='blog_post_feature_716fbe_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['author'], name='blog_post_author__038a48_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['date_published'], name='blog_post_date_pu_31985e_idx'),
        ),
    ]

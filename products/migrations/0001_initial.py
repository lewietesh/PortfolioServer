# Generated by Django 5.2.4 on 2025-07-25 11:12

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blog', '0001_initial'),
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('category', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('website_template', 'Website Template'), ('web_app', 'Web Application'), ('component', 'Component'), ('theme', 'Theme'), ('plugin', 'Plugin'), ('tool', 'Tool')], max_length=20)),
                ('description', models.TextField()),
                ('short_description', models.TextField(blank=True)),
                ('image_url', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='KSH', max_length=10)),
                ('demo_url', models.TextField(blank=True)),
                ('download_url', models.TextField(blank=True)),
                ('repository_url', models.TextField(blank=True)),
                ('documentation_url', models.TextField(blank=True)),
                ('featured', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('download_count', models.IntegerField(default=0)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('license_type', models.CharField(choices=[('single_use', 'Single Use'), ('multi_use', 'Multi Use'), ('unlimited', 'Unlimited'), ('open_source', 'Open Source')], default='single_use', max_length=20)),
                ('requirements', models.TextField(blank=True)),
                ('installation_notes', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('base_project', models.ForeignKey(blank=True, help_text='Original project this product was created from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_products', to='projects.project')),
                ('creator', models.ForeignKey(limit_choices_to={'role__in': ['developer', 'admin']}, on_delete=django.db.models.deletion.CASCADE, related_name='created_products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'product',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.tag')),
            ],
            options={
                'verbose_name': 'Product Tag',
                'verbose_name_plural': 'Product Tags',
                'db_table': 'product_tag',
                'unique_together': {('product', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='products', through='products.ProductTag', to='blog.tag'),
        ),
        migrations.CreateModel(
            name='ProductTechnology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.technology')),
            ],
            options={
                'verbose_name': 'Product Technology',
                'verbose_name_plural': 'Product Technologies',
                'db_table': 'product_technology',
                'unique_together': {('product', 'technology')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='technologies',
            field=models.ManyToManyField(blank=True, related_name='products', through='products.ProductTechnology', to='projects.technology'),
        ),
        migrations.CreateModel(
            name='ProductUpdate',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('download_url', models.TextField(blank=True)),
                ('is_major', models.BooleanField(default=False, help_text='Major version update vs minor update')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Update',
                'verbose_name_plural': 'Product Updates',
                'db_table': 'product_update',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='ProductGalleryImage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image_url', models.TextField()),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('sort_order', models.IntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Gallery Image',
                'verbose_name_plural': 'Product Gallery Images',
                'db_table': 'product_gallery_image',
                'ordering': ['product', 'sort_order'],
                'indexes': [models.Index(fields=['product'], name='product_gal_product_e0d7cf_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductPurchase',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('purchase_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('refunded', 'Refunded'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('download_count', models.IntegerField(default=0)),
                ('download_limit', models.IntegerField(blank=True, null=True)),
                ('license_key', models.CharField(blank=True, max_length=255, unique=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=255)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(limit_choices_to={'role': 'client'}, on_delete=django.db.models.deletion.CASCADE, related_name='product_purchases', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Purchase',
                'verbose_name_plural': 'Product Purchases',
                'db_table': 'product_purchase',
                'ordering': ['-date_created'],
                'indexes': [models.Index(fields=['client'], name='product_pur_client__63f324_idx'), models.Index(fields=['status'], name='product_pur_status_351a8c_idx'), models.Index(fields=['product'], name='product_pur_product_b22019_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(help_text='Rating from 1-5')),
                ('review_text', models.TextField(blank=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(limit_choices_to={'role': 'client'}, on_delete=django.db.models.deletion.CASCADE, related_name='product_reviews', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
                'db_table': 'product_review',
                'ordering': ['-date_created'],
                'indexes': [models.Index(fields=['product'], name='product_rev_product_b4e72e_idx'), models.Index(fields=['approved'], name='product_rev_approve_5b0d10_idx')],
                'unique_together': {('product', 'client')},
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='product_slug_b8980b_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'active'], name='product_categor_a3ecae_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['featured', 'active'], name='product_feature_30d6e3_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['creator'], name='product_creator_594f34_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['base_project'], name='product_base_pr_2596f2_idx'),
        ),
        migrations.AddIndex(
            model_name='productupdate',
            index=models.Index(fields=['product'], name='product_upd_product_c5a55f_idx'),
        ),
        migrations.AddIndex(
            model_name='productupdate',
            index=models.Index(fields=['version'], name='product_upd_version_9a24cc_idx'),
        ),
    ]

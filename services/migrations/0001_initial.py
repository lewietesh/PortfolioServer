# Generated by Django 5.2.4 on 2025-07-25 11:12

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceFeature',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('icon_class', models.CharField(blank=True, help_text='CSS class for feature icon', max_length=50)),
                ('category', models.CharField(blank=True, help_text='Group features by category', max_length=50)),
                ('included', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Service Feature',
                'verbose_name_plural': 'Service Features',
                'db_table': 'service_feature',
                'ordering': ['category', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('category', models.CharField(max_length=100)),
                ('subcategory', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('short_description', models.TextField(blank=True)),
                ('img_url', models.TextField(blank=True)),
                ('banner_url', models.TextField(blank=True)),
                ('icon_url', models.TextField(blank=True)),
                ('pricing_model', models.CharField(choices=[('fixed', 'Fixed'), ('tiered', 'Tiered'), ('custom', 'Custom'), ('hourly', 'Hourly'), ('per-page', 'Per Page')], max_length=20)),
                ('starting_at', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(default='KSH', max_length=10)),
                ('timeline', models.CharField(blank=True, help_text='Estimated delivery timeline', max_length=100)),
                ('featured', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'db_table': 'service',
                'ordering': ['sort_order', '-date_created'],
                'indexes': [models.Index(fields=['slug'], name='service_slug_41154d_idx'), models.Index(fields=['category'], name='service_categor_c7fde4_idx'), models.Index(fields=['featured'], name='service_feature_b420ea_idx'), models.Index(fields=['active'], name='service_active_c7ea36_idx')],
            },
        ),
        migrations.CreateModel(
            name='PricingTierFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicefeature')),
            ],
            options={
                'verbose_name': 'Pricing Tier Feature',
                'verbose_name_plural': 'Pricing Tier Features',
                'db_table': 'pricingtier_feature',
            },
        ),
        migrations.CreateModel(
            name='ServicePricingTier',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='KSH', max_length=10)),
                ('unit', models.CharField(help_text='Unit of pricing (project, hour, page, etc.)', max_length=50)),
                ('estimated_delivery', models.CharField(blank=True, max_length=50)),
                ('recommended', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_tiers', to='services.service')),
            ],
            options={
                'verbose_name': 'Service Pricing Tier',
                'verbose_name_plural': 'Service Pricing Tiers',
                'db_table': 'service_pricing_tier',
                'ordering': ['service', 'sort_order'],
            },
        ),
        migrations.AddField(
            model_name='servicefeature',
            name='pricing_tiers',
            field=models.ManyToManyField(related_name='features', through='services.PricingTierFeature', to='services.servicepricingtier'),
        ),
        migrations.AddField(
            model_name='pricingtierfeature',
            name='pricing_tier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicepricingtier'),
        ),
        migrations.CreateModel(
            name='ServiceProcessStep',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('step_order', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('icon_class', models.CharField(blank=True, max_length=50)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_steps', to='services.service')),
            ],
            options={
                'verbose_name': 'Service Process Step',
                'verbose_name_plural': 'Service Process Steps',
                'db_table': 'service_process_step',
                'ordering': ['service', 'step_order'],
            },
        ),
        migrations.CreateModel(
            name='ServiceTool',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('tool_name', models.CharField(max_length=100)),
                ('tool_url', models.URLField(blank=True)),
                ('icon_url', models.TextField(blank=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tools', to='services.service')),
            ],
            options={
                'verbose_name': 'Service Tool',
                'verbose_name_plural': 'Service Tools',
                'db_table': 'service_tool',
                'ordering': ['service', 'tool_name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceDeliverable',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('icon_class', models.CharField(blank=True, max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliverables', to='services.service')),
            ],
            options={
                'verbose_name': 'Service Deliverable',
                'verbose_name_plural': 'Service Deliverables',
                'db_table': 'service_deliverable',
                'ordering': ['service', 'sort_order'],
                'indexes': [models.Index(fields=['service'], name='service_del_service_9d132d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServiceFAQ',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('sort_order', models.IntegerField(default=0)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='services.service')),
            ],
            options={
                'verbose_name': 'Service FAQ',
                'verbose_name_plural': 'Service FAQs',
                'db_table': 'service_faq',
                'ordering': ['service', 'sort_order'],
                'indexes': [models.Index(fields=['service'], name='service_faq_service_a565a1_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServicePopularUseCase',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('use_case', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='popular_usecases', to='services.service')),
            ],
            options={
                'verbose_name': 'Service Popular Use Case',
                'verbose_name_plural': 'Service Popular Use Cases',
                'db_table': 'service_popular_usecase',
                'ordering': ['service', 'use_case'],
                'indexes': [models.Index(fields=['service'], name='service_pop_service_337fb9_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='servicepricingtier',
            index=models.Index(fields=['service'], name='service_pri_service_91ea46_idx'),
        ),
        migrations.AddIndex(
            model_name='servicepricingtier',
            index=models.Index(fields=['recommended'], name='service_pri_recomme_a78b62_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pricingtierfeature',
            unique_together={('pricing_tier', 'feature')},
        ),
        migrations.AddIndex(
            model_name='serviceprocessstep',
            index=models.Index(fields=['service'], name='service_pro_service_5867b3_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceprocessstep',
            index=models.Index(fields=['step_order'], name='service_pro_step_or_af84b9_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetool',
            index=models.Index(fields=['service'], name='service_too_service_7fb607_idx'),
        ),
    ]
